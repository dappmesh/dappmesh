[tasks.ci-format]
category = "CI - CHECK"
dependencies = ["cargo-fmt"]

[tasks.ci-check]
category = "CI - CHECK"
command = "cargo"
args = ["check", "--locked", "--workspace"]

[tasks.ci-clippy]
category = "CI - CHECK"
command = "cargo"
args = ["clippy", "--all-targets", "--tests", "--benches", "--examples", "--bins", "--", "-D", "warnings"]

# Docker
[tasks.ci-docker-resources]
category = "LOCAL USAGE"
script_runner = "@duckscript"
script = '''
TARGET_DIR = set "./target/x86_64-unknown-linux-musl/release"
DOCKER_RESOURCES_DIR = set "./docker/ci/bin"

binaries = array "dapp-product-operator"

mkdir ${DOCKER_RESOURCES_DIR}
for binary in ${binaries}
    source = set ${TARGET_DIR}/${binary}
    target = set ${DOCKER_RESOURCES_DIR}/${binary}
    cp ${source} ${target}
end
'''

[tasks.ci-docker-build]
category = "LOCAL USAGE"
script_runner = "@duckscript"
script = '''
binaries = array "dapp-product-operator"

for binary in ${binaries}
    docker_dir = set "./docker/ci"
    build_arg = set "TARGET_BIN=${binary}"
    file = set "${docker_dir}/Dockerfile"
    tag = set "ghcr.io/dappmesh/${binary}:latest"
    exec docker buildx build --platform linux/amd64 --target release --build-arg ${build_arg} --file ${file} --tag ${tag} ${docker_dir}
end
'''

[tasks.ci-docker-push]
category = "LOCAL USAGE"
script_runner = "@duckscript"
script = '''
binaries = array "dapp-product-operator"

for binary in ${binaries}
    tag = set "ghcr.io/dappmesh/${binary}:latest"
    exec docker push ${tag}
end
'''

[tasks.ci-docker-clean]
category = "LOCAL USAGE"
script_runner = "@duckscript"
script = '''
DOCKER_RESOURCES_DIR = set "./docker/ci/bin"
rm -r ${DOCKER_RESOURCES_DIR}
'''

[tasks.ci-docker]
category = "LOCAL USAGE"
dependencies = ["ci-docker-resources", "ci-docker-build", "ci-docker-push", "ci-docker-clean"]
