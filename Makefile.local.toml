# Setup
[tasks.cargo-update]
private = true
command = "cargo"
args = ["update"]

[tasks.setup]
category = "LOCAL USAGE"
dependencies = ["cargo-update"]

# Check
[tasks.cargo-check]
category = "LOCAL USAGE"
command = "cargo"
args = ["check", "--workspace"]

[tasks.cargo-fmt]
category = "LOCAL USAGE"
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.cargo-clippy]
category = "LOCAL USAGE"
command = "cargo"
args = ["clippy", "--all-targets", "--all-features", "--", "-D", "warnings"]

[tasks.check]
category = "LOCAL USAGE"
dependencies = ["cargo-check", "cargo-fmt", "cargo-clippy"]

# Clean
[tasks.clean]
category = "LOCAL USAGE"
command = "cargo"
args = ["clean"]

# Quick
[tasks.quick]
category = "LOCAL USAGE"
command = "cargo"
args = ["build", "--target", "x86_64-unknown-linux-musl", "${@}"]

# Build
[tasks.build]
category = "LOCAL USAGE"
command = "cargo"
args = ["build", "--release", "--target", "x86_64-unknown-linux-musl", "${@}"]

# Default
[tasks.default]
category = "LOCAL USAGE"
clear = true
dependencies = ["check", "test", "quick"]

# Docker
[tasks.docker-build]
category = "LOCAL USAGE"
script_runner = "@duckscript"
script = '''
tag = set "alpine"
docker_dir = set "./docker/local"
build_arg = set "TAG=${tag}"
file = set "${docker_dir}/Dockerfile"
tag = set "ghcr.io/dappmesh/devspace-container:${tag}"
exec docker buildx build --platform linux/amd64 --build-arg ${build_arg} --file ${file} --tag ${tag} ${docker_dir}
'''

[tasks.docker-push]
category = "LOCAL USAGE"
script_runner = "@duckscript"
script = '''
tag = set "alpine"
tag = set "ghcr.io/dappmesh/devspace-container:${tag}"
exec docker push ${tag}
'''

[tasks.docker]
category = "LOCAL USAGE"
dependencies = ["docker-build", "docker-push"]

# Unit Test
[tasks.test]
category = "LOCAL USAGE"
command = "cargo"
args = ["test", "--workspace", "--", "--nocapture"]

# Integration Test
[tasks.integration-test]
category = "LOCAL USAGE"
command = "cargo"
args = ["test", "--workspace", "--", "--ignored"]
